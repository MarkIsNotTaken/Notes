COMMANDS
1. cd - Changing the directory(folder) you're in
	*C:/Users/student/documents - current directory
	*Cd  >Users/student/documents/github - changes directory to 'github'

2. ls - Lists the folders/files/directories inside the current directory
	you're in.
	*C:/Users/student/documents>ls
	*C:/Users/student/documents>Files:
	   --a--	8/10/2016   9:30 AM 	Notes	

3. mkdir - Make a directory within the directory you're in.
	*C:/Users/student/documents>mkdir Github/Notes
	*^^^ - The notes folder should now be within the Github
	       folder, which is inside of the Documents folder.

4. Touch - Make a file inside the directory you're in.
	*It makes txt files and other files that are not a directory.
	*C:/Users/student/documents>touch Notes.txt
	*^^^ - This should have made a Notes file within the documents
	       folder.

5. cd ../ - Go back one directory

6. cd .. -  Go back to root folder.(C:)

GIT COMMANDS
1. Git init - Initialize project

2. Git status - Check status of project

3. git add <file name> -  

4. Git commit -m 'helloworld.txt' - Adds a file to your local git(repository)

5. Git push - Adds the commited file to the Remote(Github)

GENERAL INFORMATION
1. GUI - Graphical User Interface, it is something that makes it
		 easier for the user to interact with the computer through 
		 visual representations of functions.

2. CLI - Command Line Interface, 

3. HTML - Hypertext Markup Language, 

4. UI - User Interface, the visual elements of the computer, what the 
        user sees on websites. 

5. UX - User Experience, what the user experiences with the websites 
        they go in. The interactibles and where things are. Design.

6. CSS - 

7. Javascript - 

8. 

 THREE LEVELS OF KNOWING
 1. Knowing and understanding the information gained

 2. Teaching and reinforcing the concepts that you have learned

 3. Grocking - To understand naturally - it being a nearly permanent
 				of your knowledge.

 APP ENVIROMENTS
 1. Mobile/Phone apps
 2. Desktop/Laptop apps

 HTML
 1. <p></p> - Paragraph element
 2. </a> - Closing tag
 3. <header></header> - Things such as navigations and logos go here
 4. <footer></footer> - Copyright usually goes here
 5. <div></div> - Block element, it always starts a line and is 
                  used for content. Can only stack on top of each
                  other
 6. <span></span> - Inline elements, <img />
 7. <!-- comment --> - Writes comment within structure.
 8. <img src="image source" /> - An attribute
 9. <UL> - Unordered list, bullet points
 10. <LI> - List Item,
 11. <OL> - Ordered List,
 12. <div aside> - 
 13. <Title> - Describes the website

 CSS
 1. Class - 
 2. IDs - Can only be used once per page
 3. Style - style="background-color(property):salmon(value)"

 PITCH
 1. High Concept Pitch - Explains app/idea into 1-2 sentences
 2. Traction - 
 3. Minimum Viable Product - Essentially a draft or prototype
 4. Elecator Pitch - 

 NOTES
 1. Responsive Desgin - Building a site to respond to multiple sizes also known as fluid design.
 2. Grid Based Design - Literally grid based, Tumblr and stuff.
 3. Media Queries - Break points in CSS that tell your app to change based on screen size.
 4. Em(CSS) -  Relative to the font-size of the element (2em is 2 times the current font size of the element) Use to adust parent size by 1.5. Used in responsive design to make the elements on static pages adapt to screen size.
 5. Converting EM -> PX - Multiple px by 1.5
 6. Psuedo-Class - Used to define a special state of an element
 7. Mobile Design - Apps designed for mobile devices.
 8. Specificity - Used to tell your CSS which elements to take priority. div.navi p (color:blue) vs navi (color:blue), the former takes priority due to being specific.
 9.

 JAVASCRIPT
 PEMDAS - It works

 Variables - must have a value of a certain data type, 
 			 no spaces, do not begin with numbers,

 Alphanumeric - 90kki998 is a string due to having both 				   letters and #s, so it must be in ""

 =/== - single, assigning values
 		double or more, comparing values if they are the same

 Boolean Operators - < > <= =>

 AND/OR - && + ||

 Function - Execute statement

 Return - Can only be used once, any console log typed after will not be recognized